# Ubuntu 18.04
# find pattern in *.c
“find . -name '*.c' -exec grep 'pattern' /dev/null '{}' \+”
find . -iname "*.c" -o -iname "*.h" | xargs grep -i "pattern"

# rm file except for certain file.
find . -not -name "version" -print0 | xargs -0 rm -rf


# check dns
systemd-resolve --status


# config ufw
sudo ufw default deny incoming
sudo ufw default allow outgoing
sudo ufw allow ssh			# or sudo ufw allow 22
sudo ufw allow http			# or sudo ufw allow 80
sudo ufw allow https
sudo ufw allow 6000:6003/tcp		# allow port 6000,6001,6002,6003
sudo ufw allow 6000:6003/udp
sudo ufw deny from 192.168.0.1.1	# deny certain IP address
sudo ufw allow from 192.168.0.1 to any port 3306
sudo ufw status numbered
sudo ufw delete [number]		# for e.g. sudo ufw delete 1
sudo vi /etc/default/ufw
sudo ufw enable
sudo ufw disable
sudo ufw status verbose


# call a.sh from b.sh
$path/a.sh
source /path/a.sh
/bin/bash /path/a.sh


# set .bash_history to a certain number.
export HISTSIZE=10			        # set history to maximum 10 line.
export HISTFILESIZE=20			    # set .bash_history size to 20 byte.
export PROMPT_COMMAND="history -a"	# syschronous command line 
				                    # recording, in more terminals.
USER_IP=`who -u am i 2>/dev/null | awk '{print $NF}' | sed -e 's/[()]//g'`
export HISTTIMEFORMAT="%Y-%m-%d %H:%M:%S `whoami` ${USER_IP} "


# set environment variable
export PATH=$PATH:'/home/wlt/cproject/6828/tool/qemu-4.1.0/build'


# su: Authentication failure
su passwd root
su passwd user_name


# summarizes disk usage of each FILE, recursively for directories
du -hs
du -hs /path

# show total disk usage
df -h


# restart network
sudo ifconfig name_of_net down
sudo ifconfig name_of_net up


# solved problem: SIOCSIFFLAGS: Operation not possible due to RF-kill
rfkill unblock wifi
# then restart wifi

# Ubuntu 18.04 add default route
route add -net 内网网段 netmask network_card_number
route add -net 内网网段 netmask gw gateway

sudo vim /etc/rc.local
# first network interface card
route add -net 192.168.78.0 255.255.255.0 ens0238
route add -net 192.168.78.0 255.255.255.0 gw 192.168.78.1
# second network interface card
route add -net 192.168.43.0 255.255.255.0 ens1qe38
route add -net 192.168.43.0 255.255.255.0 gw 192.168.43.1
exit 0


# Windows config two network interface card route
#内外网连接上后，此时内外网的默认网关同时存在  
#1、清除两个默认网关  
#2、添加默认网关为外网网关  
#3、添加内网路由  
route delete 0.0.0.0  
route add -p 0.0.0.0 mask 0.0.0.0 192.92.48.1
route add -p 192.0.0.0 mask 255.0.0.0 192.92.36.1

# second way to configurate ip route table.
# This is not correct.
1. sudo vim /etc/network/interfaces
# add contention
auto enp0s3
iface enp0s3 inet static
address 192.168.1.179
netmask 255.255.255.0
gateway 192.168.1.1
# continue
auto enp0s8
iface enp0s8 inet static
address 192.168.0.179
netmask 255.255.255.0
# 2. restart network
sudo /etc/init.d/networking restart
# 3. add route table
sudo vim /etc/iproute2/rt_tables
# add camp and outer table
252 camp
251 outer
# 4. add route rules in rc.local and networking
sudo vim /etc/rc.local
sudo vim /etc/init.d/networking
service network-manager stop
sudo ip route flush table camp
sudo ip route add default via 192.168.0.1 dev enp0s8 src 192.168.0.179 table camp
sudo ip route add from 192.168.0.179 table camp
sudo ip route flush table outer
sudo ip route add default via 192.168.1.1 dev enp0s3 src 192.168.1.179 table outer 
sudo ip route add from 192.168.1.179 table outer


# 1. Third way two default gateways on one system
sudo vim /etc/network/interfaces
allow-hotplug enp0s8
iface enp0s8 inet static
address 192.168.0.179
netmask 255.255.255.0
post-up ip route add 192.168.0.0/24 dev enp0s8 src 192.168.0.179 table camp
post-up ip route add default via 192.168.0.1 dev enp0s8 table camp
post-up ip rule add from 192.168.0.179/32 table camp
post-up ip rule add to 192.168.0.179/32 table camp

allow-hotplug enp0s3
iface enp0s3 inet static
address 192.168.1.179
netmask 255.255.255.0
gateway 192.168.1.1
# 2. Add second routing table by editing /etc/iproute2/rt_tables
sudo vim /etc/iproute2/rt_tables
# Add content
1 camp
# 3. Populate new routing table:
# The first command says that the network:192.168.0.0/24,
# 	can be reached through the enp0s8 interface.
# The second command sets the default getway.
# The third rules say that both traffic from the IP address
# 	192.168.0.179, as well as traffic directed to or
# 	through this IP address, should use the camp routing table.
post-up ip route add 192.168.0.0/24 dev enp0s8 src 192.168.0.179 table camp
post-up ip route add default via 192.168.0.1 dev enp0s8 table camp
post-up ip rule add from 192.168.0.179/32 table camp
post-up ip rule add to 192.168.0.179/32 table camp


# setup static IP address on Ubuntu 18.04 server.
sudo vim /etc/netplan/01-netcfg.yaml
network:
	version: 2
	renderer: networkd
	ethernets:
		enp0s3:
			dhcp: no
			addresses: [192.168.0.170/24]
			gateway4: [192.168.0.1]
			nameservers:
				addresses: [192.168.0.1]
	


# crontab
crontab -e
crontab -l

modprobe -r nbd
modprobe nbd nbds_max=1000


# use apt check the version of a package
sudo apt-cache madison <package_name>
# list all of the source where it come from
sudo apt cache policy <package_name>
# install a particular version of package
sudo apt install <package_name>=<version>
# simulate the process of install, and list 
# what package it dependency.
sudo apt install -s <package_name>
# check the details of certain package.
sudo apt-cache show <package_name>


# add a user. useradd is native binary file
# adduser is a perl script which uses useradd.
useradd -m user_name
passwd user_name
usermod -a -G sudo user_name
chsh -s /bin/bash user_name

# adduser perl script add user
sudo adduser username
# add root priority
sudo usermod -a -G adm username
sudo usermod -a -G sudo username

# delete user and files
sudo userdel -r username
# only delete user accout
sudo userdel username


# change username.
# First, add a temporary user, and give it sudo privileges.
sudo adduser tmp
sudo usermod -aG sudo tmp
# Second, login with tmp user.
sudo usermod -l newusername -d /home/new/username -m oldusername
sudo groupmod -n newusername oldusername
# Thrid, create a symbolic link.
sudo ln -s /home/newusername /home/oldusername
# Fourth, Change the dispaly name.
sudo chfn -f "firstname lastname" newusername
# Delete temporary user created on step 1.
sudo userdel -r tmp


# reserve /tmp folder after reboot.
vim /etc/tmpfiles.d/tmp.conf
d /tmp 1777 root root -		# "-" means never delete it.


# find release of Ubuntu.
cat /proc/version
lsb_release -a


# download command line source
$ which find
/usr/bin/find
$ dpkg -S /usr/bin/find
findutils:/usr/bin/find
$ sudo apt-get source findutils
# source code will in the following folder
/usr/local/src


# date get millisecond microsecond nanosecond
date +%T.%N			# nanosecond
date +%T.%6N			# microsecond
date +%T.%3N			# millisecond


# keep session alive after disconnect from ssh
tmux
run program
Ctrl+b d
attach


# backup files if file exits then skip
rsync -a -r -v --ignore-existing src dst


# redirect and append both stdout stderr to a file
ls >> log 2>&1          # open log in append mode,
                        # and redirect stderr to where
                        # stdout is going.






# bc
# hex-to-decimal, must be uppercase.
echo "ibase=16; C0" | bc
# decimal-to-hex
echo "obase=16; 192" | bc
# binary-to-hex, obase first
echo "obase=16; ibase=2; 11000000" | bc


# Enable sudo without password in Ubuntu/Debian
# /etc/sudoers
sudo visudo
username ALL=(ALL) NOPASSWD: ALL


# access tty terminal
# By default Ubuntu has 7 tty's
1. Up until Ubuntu 17.10, 1-6 are command line only
and 7 runs your X session
2. On Ubuntu 17.10 and newer, it's GUI login screen
on 1, GUI desktop on 2 and command lines on 3-7.
# access them
Ctrl + Alt + F1 (or F3 on 17.10 and newer)
# to get back to your GUI session
Ctrl + Alt + F7 (or F2 on 17.10 and newer)


# synchronize time ntp
# install ntp both at server and client
sudo apt-get install ntp
#   configurate ntp server
# + add following three line into /etc/ntp.conf
restrict 192.168.1.0 mask 255.255.255.0 nomodify notrap
server 127.127.1.0 # local clock
fudge 127.127.1.0 stratum 10
# restart ntp
sudo /etc/init.d/ntp restart
# run command at client
sudo ntpdate 192.168.0.100      # ntp server ip
# Get computer name from ip address
# Linux
nslookup 192.168.50.175
# Windows
nslookup 192.168.50.175
# or
ping -a 192.168.50.175


# size command
size program
# switch between different output formats
size program --format=SysV


# switch between terminal windows
# switch between different application
Alt + Tab
#   switch between different windows of the 
# + same application
Alt + tilde         # tilde = the key above Tab


# translate windows carriage return from file: single quote used
cat a.txt | tr -d '\015' > b.txt    # \r == 015
# or using sed: single quote used
sed -e 's/
//' a.txt > b.txt       # ctrl+v ctrl+m = 
# convert carriage return to line feed in the files that under direcotries
find . -name "*" | xargs dos2unix   # -f force convert binary files.


# produce private key
mkdir ~/.ssh
chmod 700 ~/.ssh
ssh-keygen -t rsa -b 4096

# transfer client key to host
ssh-copy-id user@host

# login ssh server using private key
ssh -i private_file_name user@host
