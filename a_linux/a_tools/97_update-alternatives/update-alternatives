# setting default program version
update-alternatives --install <link> <name> <path> <priority>
# example as following:
update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4 2
update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 1

# example for setup gcc, g++, cc and c++
sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.3 10
sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.4 20

sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.3 10
sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.4 20

sudo update-alternatives --install /usr/bin/cc cc /usr/bin/gcc 30
sudo update-alternatives --set cc /usr/bin/gcc

sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++ 30
sudo update-alternatives --set c++ /usr/bin/g++
# configure Alternatives
sudo update-alternatives --config gcc
sudo update-alternatives --config g++
# Or switch using script
# { following is a shell script
#!/bin/sh

if [ -z "$1" ]; then
    echo "usage: $0 version" 1>&2
    exit 1
fi

if [ ! -f "/usr/bin/gcc-$1" ] || [ ! -f "/usr/bin/g++-$1" ]; then
    echo "no such version gcc/g++ installed" 1>&2
    exit 1
fi
# end of shell script }

update-alternatives --set gcc "/usr/bin/gcc-$1"
update-alternatives --set g++ "/usr/bin/g++-$1"


# show and setting default version program.
update-alternatives --config <name>
# example as following:
update-alternatives --config g++

# get all configured name
ls /var/lib/alternatives
