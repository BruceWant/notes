# Annotations and Descriptions
# _In_
Annotates input parameters that are scalars, structures, 
pointers to structures and the like. Explicitly may be used 
on simple scalars. The parameter must be valid in pre-state 
and will not be modified.


# vs comment
ctrl + K then ctrl + c
# vs uncomment
ctrl + K then ctrl + u


# Output of the vs preprocessor
Project properties -> c/c++ -> Preprocessing ->
Preprocess to a file: Yes(/p)


# visual studio add header file and library.
# 1.header files
Project --> Properties --> Configuration Properties -->
C/C++ --> General --> Additional Includ Directories
# 2.Static library directories
Project --> Properties --> Configuration Properties -->
Linker --> General --> Additional Library Directories
# 3.Library files
Project --> Properties --> Configuration Properties -->
Linker --> Input --> Additional Dependencies


# disable warning.
#pragma warning(disable: 6067)
#define _CRT_SECURE_NO_WARNINGS
#define _CRT_NONSTDC_NO_DEPRECATE

# Add library in the source code file.
#pragma comment(lib, "user.lib")


# Define unicode encoding.
#define UNICODE
#define _UNICODE


# Multiline indent
tab			# shitf left tab
shift + tab		# shift right tab


# uninstall vs
1. C:\Program Files (x86)\Microsoft Visual Studio\Installer\resources\app\layout\installcleanup.exe
2. vssetup.exe /uninstall /force
3. Delete everything under:

C:\ProgramData\Microsoft\VisualStudio\15.0
C:\ProgramData\Microsoft\VisualStudio\Packages
%appdata%\Microsoft\VisualStudio\15.0*
%appdata%\Microsoft\VisualStudio\Packages
C:\Program Files (x86)\Microsoft Visual Studio\2017
HKEY_CURRENT_USER\Software\Microsoft\VisualStudio\15.0*
HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\15.0*


# g++ memory alignment
struct test
{
    int a;
    int *pa;
}__attribute__((aligned (8)));

# g++ or do not make optimilize
struct test2
{
    int a;
    int *pa;
}__attibute__((packed));

# MSVC
#pragma pack(push)
#pragma pack(4)
struct test
{
    int a;
    int *pa;
};
#pragma pack(pop)
